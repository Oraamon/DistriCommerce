name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecommerce
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
          
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: admin123
        ports:
          - 5672:5672
          - 15672:15672

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Test Payment Service
      run: |
        cd payment-service
        mvn clean test
        
    - name: Test Order Service
      run: |
        cd order-service
        mvn clean test
        
    - name: Test Notification Service
      run: |
        cd notification-service
        mvn clean test
        
    - name: Test Product Service
      run: |
        cd product-service
        mvn clean test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build Payment Service
      run: |
        cd payment-service
        mvn clean package -DskipTests
        
    - name: Build Order Service
      run: |
        cd order-service
        mvn clean package -DskipTests
        
    - name: Build Notification Service
      run: |
        cd notification-service
        mvn clean package -DskipTests
        
    - name: Build Product Service
      run: |
        cd product-service
        mvn clean package -DskipTests
        
    - name: Build Docker Images
      run: |
        docker compose build
        
    - name: Run Integration Tests
      run: |
        docker compose up -d
        sleep 60
        curl -f http://localhost:8081/actuator/health || exit 1
        curl -f http://localhost:8082/actuator/health || exit 1
        curl -f http://localhost:8083/actuator/health || exit 1
        curl -f http://localhost:8086/actuator/health || exit 1
        docker compose down 